name: test-reports
on:
  workflow_run:
    workflows:
      - run-unit-tests             
    types: 
      - completed

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  report-ubuntu: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create lint report
        if: success() || failure()
        uses: dorny/test-reporter@v2
        with:
            name: Lint Results
            artifact: lint-results
            path: "tokenserver/reports/lint-results.xml, platform/reports/lint-results.xml"
            reporter: jest-junit
            fail-on-error: true
    
      - name: Create test report
        uses: dorny/test-reporter@v2
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
          name: Unit Test Results
          artifact: test-results-ubuntu
          path: "TESTS*.xml"
          reporter: java-junit
          fail-on-error: true

      - name: Setup .NET Core - for coverage report # Required to execute ReportGenerator
        uses: actions/setup-dotnet@v4
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
            dotnet-version: 8.x
            dotnet-quality: 'ga'

      - name: Download Coverage Files 
        uses: actions/download-artifact@v4
        with:
            name: test-results-ubuntu
            path: "platform/reports/"
            run-id: ${{ github.event.workflow_run.id }}
            github-token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Create coverage md report 
        uses: danielpalme/ReportGenerator-GitHub-Action@5.4.9
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
            reports: "platform/reports/*.xml"
            targetdir: "platform/reports/"
            reporttypes: MarkdownSummaryGithub
      
      - name: Output coverage to summary
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        run: cat ./platform/reports/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

  report-mac: 
    runs-on: macos-latest

    steps:
      - name: Create lint report
        if: success() || failure()
        uses: dorny/test-reporter@v2
        with:
            name: Lint Results
            artifact: lint-results
            path: "tokenserver/reports/lint-results.xml, platform/reports/lint-results.xml"
            reporter: jest-junit
            fail-on-error: true
            
      - name: Create test report
        uses: dorny/test-reporter@v2
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
          name: Unit Test Results - mac
          artifact: test-results-mac
          path: "TESTS*.xml"
          reporter: java-junit
          fail-on-error: true

      - name: Setup .NET Core - for coverage report # Required to execute ReportGenerator
        uses: actions/setup-dotnet@v4
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
            dotnet-version: 8.x
            dotnet-quality: 'ga'

      - name: Download Coverage Files 
        uses: actions/download-artifact@v4
        with:
            name: test-results-mac
            path: "platform/reports/"
            run-id: ${{ github.event.workflow_run.id }}
            github-token: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Create coverage md report 
        uses: danielpalme/ReportGenerator-GitHub-Action@5.4.9
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
            reports: "platform/reports/*.xml"
            targetdir: "platform/reports/"
            reporttypes: MarkdownSummaryGithub
      
      - name: Output coverage to summary
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        run: cat ./platform/reports/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

  report-win: 
    runs-on: windows-latest
    env:
      EDGE_BIN: C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe
    steps:    
      - name: Create test report
        uses: dorny/test-reporter@v2
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
          name: Unit Test Results - win
          artifact: test-results-win
          path: "TESTS*.xml"
          reporter: java-junit
          fail-on-error: true

      - name: Setup .NET Core - for coverage report # Required to execute ReportGenerator
        uses: actions/setup-dotnet@v4
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
            dotnet-version: 8.x
            dotnet-quality: 'ga'

      - name: Download Coverage Files 
        uses: actions/download-artifact@v4
        with:
            name: test-results-win
            path: "platform/reports/"
            run-id: ${{ github.event.workflow_run.id }}
            github-token: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Create coverage md report 
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.1
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        with:
            reports: "platform/reports/*.xml"
            targetdir: "platform/reports/"
            reporttypes: MarkdownSummaryGithub
      
      - name: Output coverage to summary
        if: success() || failure() && steps.run-unit-tests.outcome == 'success'
        run: Get-Content -Path ".\platform\reports\SummaryGithub.md" >> $Env:GITHUB_STEP_SUMMARY
